---
title: "Week 01"
subtitle: "Playing around"
author: "Dave Riegert"
institute: "Trent University"
execute: 
  echo: true
format:
    html:
        code-fold: true
        toc: true
        toc-location: left
        toc-depth: 2
        toc-title: "Table of Contents"
        self-contained: false
        mathjax: "local"
filters:
  - webr
webr:
  packages: ["tibble", "ggplot2"]
slide-number: true
smaller: false
---

Objective
Learn how to compute summary statistics and create basic plots using dplyr and ggplot2, two core packages from the tidyverse.

1. Setup

# Load necessary packages
```{webr-r}
#| context: setup
#| autorun: true

library(dplyr)
library(ggplot2)
```

2. Example Data

We'll use the built-in mtcars dataset for demonstration.

```{webr-r}
#| context: setup
#| autorun: true
data <- mtcars
```

3. Summary Statistics

Calculate mean, median, standard deviation, and count for mpg (miles per gallon).

```{webr-r}
#| autorun: false
summary_stats <- data %>%
  summarise(
    mean_mpg = mean(mpg),
    median_mpg = median(mpg),
    sd_mpg = sd(mpg),
    count = n()
  )

print(summary_stats)
```

You can also group by a categorical variable, e.g., number of cylinders (cyl):

```{webr-r}
#| autorun: false
group_stats <- data %>%
  group_by(cyl) %>%
  summarise(
    mean_mpg = mean(mpg),
    median_mpg = median(mpg),
    sd_mpg = sd(mpg),
    count = n()
  )

print(group_stats)
```

4. Basic Plots with ggplot2

Scatter plot of mpg vs wt (weight):

```{webr-r}
#| autorun: false

ggplot(data, aes(x = wt, y = mpg)) +
  geom_point() +
  labs(title = "Scatter plot of MPG vs Weight", x = "Weight (1000 lbs)", y = "Miles per Gallon")
```

Boxplot of mpg by number of cylinders:

```{webr-r}
#| autorun: false

ggplot(data, aes(x = factor(cyl), y = mpg)) +
  geom_boxplot() +
  labs(title = "Boxplot of MPG by Number of Cylinders", x = "Number of Cylinders", y = "Miles per Gallon")
```

5. Exercise (Optional)

Compute the mean horsepower (hp) for each cylinder group and create a bar plot of these means.

```{webr-r}
# Compute the mean horsepower

```
